"use strict";(self.webpackChunkude_a_io_t_page=self.webpackChunkude_a_io_t_page||[]).push([[3696],{2816:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=i(7624),r=i(4552);i(6212),i(2440),i(6968);const a={sidebar_label:"Ejemplo 6"},t="Ejemplo 5 - ESP32 como cliente",o={id:"sesiones/percepcion/sesion7g",title:"Ejemplo 5 - ESP32 como cliente",description:"En este ejemplo el ESP32 toma funciona como cliente enviando datos a la plataforma dweet.io.",source:"@site/docs/sesiones/percepcion/sesion7g.md",sourceDirName:"sesiones/percepcion",slug:"/sesiones/percepcion/sesion7g",permalink:"/UdeA_IoT-page/docs/sesiones/percepcion/sesion7g",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/sesiones/percepcion/sesion7g.md",tags:[],version:"current",frontMatter:{sidebar_label:"Ejemplo 6"},sidebar:"sesionesSidebar",previous:{title:"Ejemplo 5",permalink:"/UdeA_IoT-page/docs/sesiones/percepcion/sesion7f"},next:{title:"Introducci\xf3n",permalink:"/UdeA_IoT-page/docs/sesiones/percepcion/sesion8a"}},l={},d=[{value:"Descripci\xf3n",id:"descripci\xf3n",level:2},{value:"Hardware",id:"hardware",level:2},{value:"Componentes",id:"componentes",level:3},{value:"Esquematico",id:"esquematico",level:3},{value:"Conexiones",id:"conexiones",level:3},{value:"Software",id:"software",level:2},{value:"Software - Parte 1",id:"software---parte-1",level:3},{value:"Software 2 - Parte 2",id:"software-2---parte-2",level:3},{value:"Puesta en marcha",id:"puesta-en-marcha",level:2},{value:"Test",id:"test",level:3},{value:"Actividad",id:"actividad",level:2},{value:"Enlaces",id:"enlaces",level:2}];function c(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.M)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"ejemplo-5---esp32-como-cliente",children:"Ejemplo 5 - ESP32 como cliente"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["En este ejemplo el ESP32 toma funciona como ",(0,s.jsx)(n.strong,{children:"cliente"})," enviando datos a la plataforma ",(0,s.jsx)(n.a,{href:"http://dweet.io/",children:"dweet.io"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"descripci\xf3n",children:"Descripci\xf3n"}),"\n",(0,s.jsxs)(n.p,{children:["Enviar el valor leido en un potenciometro conectado al ESP32 a la la plataforma ",(0,s.jsx)(n.a,{href:"https://dweet.io/",children:"https://dweet.io/"})]}),"\n",(0,s.jsx)(n.p,{children:"Es importante tener en cuenta la siguiente informaci\xf3n sobre obtenida de la documentaci\xf3n:"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"ADC2 pins cannot be used when Wi-Fi is used. So, if you\u2019re using Wi-Fi and you\u2019re having trouble getting the value from an ADC2 GPIO, you may consider using an ADC1 GPIO instead, that should solve your problem."})}),"\n",(0,s.jsxs)(n.p,{children:["Segun lo anterior, usar el puerto GPIO15 que es el asociado al ADC2 es un problema (agradecimiento ",(0,s.jsx)(n.a,{href:"https://github.com/DanielJaramillo94",children:"@DanielJaramillo94"})," encontro la soluci\xf3n). Teniendo en cuenta lo anterior, la recomendaci\xf3n es usar otro puerto que no sea ADC2, como el 34, por ejemplo, solucionamos el error."]}),"\n",(0,s.jsx)(n.h2,{id:"hardware",children:"Hardware"}),"\n",(0,s.jsx)(n.h3,{id:"componentes",children:"Componentes"}),"\n",(0,s.jsx)(n.p,{children:"Los componentes necesarios para implementar este ejemplo son:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"#"}),(0,s.jsx)(n.th,{children:"Elemento"}),(0,s.jsx)(n.th,{children:"Cantidad"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"1"}),(0,s.jsx)(n.td,{children:"ESP32"}),(0,s.jsx)(n.td,{children:"1"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"2"}),(0,s.jsxs)(n.td,{children:["Potenciometro (Grove - Rotary Angle Sensor ",(0,s.jsx)(n.a,{href:"https://wiki.seeedstudio.com/Grove-Rotary_Angle_Sensor/",children:"[link]"}),")"]}),(0,s.jsx)(n.td,{children:"1"})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"esquematico",children:"Esquematico"}),"\n",(0,s.jsx)(n.p,{children:"El esquematico de este sistema se muestra a continuaci\xf3n:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"ejemplo3_sch",src:i(8828).c+"",width:"879",height:"849"})}),"\n",(0,s.jsx)(n.h3,{id:"conexiones",children:"Conexiones"}),"\n",(0,s.jsx)(n.p,{children:"El diagrama de conexi\xf3n se muestra a continuaci\xf3n:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"ejemplo3_bb",src:i(252).c+"",width:"813",height:"639"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Archivo Fritzing"})}),"\n",(0,s.jsxs)(n.p,{children:["El archivo Fritzing ",(0,s.jsx)(n.strong,{children:"sensor_analogo.fzz"})," del ejemplo se puede descargar del siguiente ",(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(9284).c+"",children:"[link]"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"software",children:"Software"}),"\n",(0,s.jsx)(n.h3,{id:"software---parte-1",children:"Software - Parte 1"}),"\n",(0,s.jsx)(n.p,{children:"Este programa realiza las siguientes tareas:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Lee el valor analogo del potenciometro."}),"\n",(0,s.jsx)(n.li,{children:"Envia el valor leido al PC mediante el puerto serial."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'const int analogInPin = 3;  //  GPIO3\r\nint sensorValue = 0;         // Value read from the pot\r\n\r\nvoid setup() {\r\n  // Start Serial  \r\n  Serial.begin(115200);    \r\n}\r\n\r\nvoid loop() {\r\n  // Read the analog in value\r\n  sensorValue  = analogRead(analogInPin);\r\n  \r\n  // Display data  \r\n  Serial.print("Sensor:  ");\r\n  Serial.println(sensorValue);\r\n   \r\n  // Wait a few seconds between measurements.\r\n  delay(2000);\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"software-2---parte-2",children:"Software 2 - Parte 2"}),"\n",(0,s.jsx)(n.p,{children:"Este programa es una mejora del anterior que realiza las siguientes tareas:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Se conecta a una red local Wifi."}),"\n",(0,s.jsx)(n.li,{children:"Muestra un log para conocer el estado de la conexi\xf3n y algunos parametros asociados a la red."}),"\n",(0,s.jsx)(n.li,{children:"Lee el valor analogo del potenciometro."}),"\n",(0,s.jsxs)(n.li,{children:["Envia el valor leido a la plataforma ",(0,s.jsx)(n.a,{href:"https://dweet.io/",children:"https://dweet.io/"})," y al monitor serial mediante el puerto serial."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cpp",children:'#include <WiFi.h>\r\n#include <WiFiClient.h>\r\n\r\n// WiFi parameters\r\nconst char* ssid = "ssid";\r\nconst char* password = "password";\r\n\r\nconst int analogInPin = 3; // GPIO3\r\nint sensorValue = 0;        // Value read from the pot\r\n\r\nString thing_name = "node001";\r\n\r\n// Host\r\nconst char* host = "dweet.io";\r\n\r\nvoid setup() {\r\n  // Start Serial\r\n  Serial.begin(115200);\r\n  delay(10);  \r\n\r\n  // We start by connecting to a WiFi network\r\n  Serial.println();\r\n  Serial.println();\r\n  Serial.print("Connecting to ");\r\n  Serial.println(ssid);\r\n  WiFi.begin(ssid, password);\r\n  while (WiFi.status() != WL_CONNECTED) {\r\n    delay(500);\r\n    Serial.print(".");\r\n  }\r\n\r\n  Serial.println("");\r\n  Serial.println("WiFi connected");\r\n  Serial.println("IP address: ");\r\n  Serial.println(WiFi.localIP());\r\n}\r\n\r\nvoid loop() {\r\n  Serial.print("Connecting to ");\r\n  Serial.println(host);\r\n\r\n  // Use WiFiClient class to create TCP connections\r\n  WiFiClient client;\r\n  const int httpPort = 80;\r\n  if (!client.connect(host, httpPort)) {\r\n    Serial.println("connection failed");\r\n    return;\r\n  }\r\n\r\n  // Read the analog in value\r\n  sensorValue  = analogRead(analogInPin);\r\n\r\n\r\n  // We now create a URI for the request\r\n  String url = "/dweet/for/" + thing_name + "?value=" + String(sensorValue);\r\n\r\n  // Send request\r\n  Serial.print("Requesting URL: ");\r\n  Serial.println(url);\r\n  client.print(String("GET ") + url + " HTTP/1.1\\r\\n" +\r\n               "Host: " + host + "\\r\\n" +\r\n               "Connection: close\\r\\n\\r\\n");\r\n\r\n  unsigned long timeout = millis();\r\n  while (client.available() == 0) {\r\n    if (millis() - timeout > 1000) {\r\n      Serial.println(">>> Client Timeout !");\r\n      client.stop();\r\n      return;\r\n    }\r\n  }\r\n  \r\n  // Read all the lines from the answer\r\n  while(client.available()){\r\n    String line = client.readStringUntil(\'\\r\');\r\n    Serial.print(line);\r\n  }\r\n\r\n  // Close connecting\r\n  Serial.println();\r\n  Serial.println("closing connection");\r\n\r\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsxs)(n.p,{children:["Note del codigo que el nombre de la cosa en este caso es: ",(0,s.jsx)(n.code,{children:"node001"})]})}),"\n",(0,s.jsx)(n.h2,{id:"puesta-en-marcha",children:"Puesta en marcha"}),"\n",(0,s.jsx)(n.h3,{id:"test",children:"Test"}),"\n",(0,s.jsxs)(n.p,{children:["Vaya a ",(0,s.jsx)(n.a,{href:"https://dweet.io/",children:"https://dweet.io/"})," y explore el API, para ello siga el link ",(0,s.jsx)(n.a,{href:"https://dweet.io/play/",children:"https://dweet.io/play/"})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"api_dweet",src:i(8596).c+"",width:"1282",height:"614"})}),"\n",(0,s.jsxs)(n.p,{children:["Registre la cosa dando click en el boton ",(0,s.jsx)(n.strong,{children:"POST"})," tal y como se muestra a continuaci\xf3n:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dweet1_reg",src:i(416).c+"",width:"1164",height:"304"})}),"\n",(0,s.jsxs)(n.p,{children:["En los campos que se despliegan coloque el nombre que le pondra a la cosa, en este ejemplo se uso ",(0,s.jsx)(n.strong,{children:"node001"})," tal y como se mostro en la siguiente figura:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dweet1",src:i(9877).c+"",width:"1070",height:"353"})}),"\n",(0,s.jsxs)(n.p,{children:["Verifique que la cosa esta registrada en ",(0,s.jsx)(n.a,{href:"https://dweet.io/follow",children:"https://dweet.io/follow"})," colocando el nombre de la cosa (",(0,s.jsx)(n.code,{children:"node001"})," en este caso):"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dweet2",src:i(9140).c+"",width:"1274",height:"410"})}),"\n",(0,s.jsxs)(n.p,{children:["Para ver los datos que envia la cosa vaya en el navegador a ",(0,s.jsx)(n.a,{href:"https://dweet.io/follow/thing_name",children:"https://dweet.io/follow/thing_name"}),", donde ",(0,s.jsx)(n.code,{children:"thing_name"})," es el nombre de la cosa (",(0,s.jsx)(n.code,{children:"node001"})," en este caso):"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dweet3",src:i(2788).c+"",width:"1256",height:"469"})}),"\n",(0,s.jsxs)(n.p,{children:["Usando el API, coloque manualmente un valor cualquiera usando el par ",(0,s.jsx)(n.code,{children:"{KEY: VALUE}"}),", en este caso ",(0,s.jsx)(n.code,{children:"KEY"})," es ",(0,s.jsx)(n.code,{children:'"value"'})," y ",(0,s.jsx)(n.code,{children:"VALUE"})," es ",(0,s.jsx)(n.code,{children:"0"}),". De este modo los parametros seran ",(0,s.jsx)(n.code,{children:'{"value": 0}'})," tal y como se muestra a continuaci\xf3n:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dweet4",src:i(5984).c+"",width:"1071",height:"354"})}),"\n",(0,s.jsxs)(n.p,{children:["Luego observe nuevamente la direccion de la cosa, en nuestro caso: ",(0,s.jsx)(n.a,{href:"https://dweet.io/follow/node001",children:"https://dweet.io/follow/node001"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Proceda a descargar en la ESP32 el c\xf3digo; este despues de ponerse a funcionar arroja la siguiente salida en el monitor serial:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"serial_esp32",src:i(956).c+"",width:"1061",height:"328"})}),"\n",(0,s.jsxs)(n.p,{children:["Notese que el ESP32 esta haciendo peticiones para colocar los datos en ",(0,s.jsx)(n.strong,{children:"dweet.io"}),", esto se puede corroborar cargango la pagina de la cosa ",(0,s.jsx)(n.a,{href:"https://dweet.io/follow/node001",children:"https://dweet.io/follow/node001"}),". La siguiente figura muestra la grafica en el tiempo de los valores enviados:"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dweet5",src:i(9548).c+"",width:"1292",height:"567"})}),"\n",(0,s.jsx)(n.h2,{id:"actividad",children:"Actividad"}),"\n",(0,s.jsxs)(n.p,{children:["Explore la creaci\xf3n de una dashboard que se asocie a la informaci\xf3n que usted esta enviando en este ejemplo precionando el boton ",(0,s.jsx)(n.strong,{children:"Create a Custom DashBoard"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"dweet8",src:i(3832).c+"",width:"1305",height:"600"})}),"\n",(0,s.jsx)(n.h2,{id:"enlaces",children:"Enlaces"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://wokwi.com/projects/348987008435094100",children:"https://wokwi.com/projects/348987008435094100"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.esp32.com/viewtopic.php?t=20934",children:"https://www.esp32.com/viewtopic.php?t=20934"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.home-assistant.io/integrations/dweet/",children:"https://www.home-assistant.io/integrations/dweet/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://yungger.medium.com/so-easy-micropython-dweet-io-iot-cloud-platform-42ade3b12187",children:"https://yungger.medium.com/so-easy-micropython-dweet-io-iot-cloud-platform-42ade3b12187"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.hackster.io/javier-munoz-saez/esp8266-sending-data-to-an-online-deskboard-3e7e91",children:"https://www.hackster.io/javier-munoz-saez/esp8266-sending-data-to-an-online-deskboard-3e7e91"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/phyunsj/dweet.io-node-red",children:"https://github.com/phyunsj/dweet.io-node-red"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"http://developers.sensetecnic.com/article/post-data-to-dweetio-using-fred/",children:"http://developers.sensetecnic.com/article/post-data-to-dweetio-using-fred/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.iotify.io/temp/untitled-4",children:"https://docs.iotify.io/temp/untitled-4"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.learnrobotics.org/blog/create-a-database-for-iot-using-dweet-io-tutorial/",children:"https://www.learnrobotics.org/blog/create-a-database-for-iot-using-dweet-io-tutorial/"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.learnrobotics.org/blog/nodemcu-dweet-io-freeboard-io-tutorial-for-iot/",children:"https://www.learnrobotics.org/blog/nodemcu-dweet-io-freeboard-io-tutorial-for-iot/"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.M)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},9284:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/files/sensor_analogo-cca0dc05285379f738e8b27a7b9614d4.fzz"},8596:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/API_dweet-a7963d0a77af62ae7cd433e0e8955370.png"},9877:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/dweet1-ce50094e7ba42ab8e5af93a62c37f720.png"},416:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/dweet1_reg-9c6a47d3a08fe004df7ed512d7aedfaf.png"},9140:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/dweet2-23dfe84dbee63148f3ebb421b1a17104.png"},2788:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/dweet3-a3249e5de01fb53eab8c8f014950e47d.png"},5984:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/dweet4-5a12554f8d79f745a38bf7ce15705ef2.png"},9548:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/dweet5-300b6dd117b2d061ce839b906deab6bf.png"},3832:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/dweet8-4956ec84ba1dc08dd1ebe48fefaa809b.png"},252:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/sensor_analogo_bb-8d7de8253295d8b6e7f24313b63459ca.png"},8828:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/sensor_analogo_sch-3e0e1540e59ca0f31a906c9e0f1bbc43.png"},956:(e,n,i)=>{i.d(n,{c:()=>s});const s=i.p+"assets/images/serial_esp32-ac2861abf300aabe73767cbc05330634.png"}}]);